// **
// **
// [START: button placeholders]

%btn {
  @extend %noselect;
  @extend %semi-bold;
  cursor: pointer;
  outline: 0;
  text-align: center;
  display: flex;
  justify-content: center;
  align-items: center;
  word-break: break-all;
  text-decoration: none;
  box-shadow: $z0-shadow;

  & > i + a,
  & > i + span {
    margin-left: $base-spacing-unit;
  }

  & > a + i,
  & > span + i {
    margin-left: $base-spacing-unit;
  }

  svg {
    vertical-align: middle;
    display: inline-block;

    & + a,
    & + span {
      display: inline-block;
      margin-left: $base-spacing-unit * 2;
    }
  }
}

%btn-outlined {
  @extend %noselect;
  @extend %semi-bold;
  text-align: center;
  background: $pure-white;
  cursor: pointer;
  outline: 0;
  display: inline-block;
  word-break: break-all;

  &[disabled="disabled"] {
    border: $base-border-width solid rgba($mono-light, 0.38);
    color: rgba($mono-light, 0.38);
    cursor: default;
    pointer-events: none;
  }

  & > i + a,
  & > i + span {
    margin-left: $base-spacing-unit;
  }

  & > a + i,
  & > span + i {
    margin-left: $base-spacing-unit;
  }

  svg {
    vertical-align: middle;
    display: inline-block;

    & + a,
    & + span {
      display: inline-block;
      margin-left: $base-spacing-unit * 2;
    }
  }
}

%btn-naked {
  @extend %noselect;
  @extend %bold;
  text-align: center;
  cursor: pointer;
  outline: 0;
  display: inline-block;
  border: 0;

  &[disabled="disabled"] {
    color: rgba($mono-light, 0.6);
    cursor: default;
  }

  &:hover {
    @extend %bold;
  }

  & > i + a,
  & > i + span {
    margin-left: $base-spacing-unit;
  }

  & > a + i,
  & > span + i {
    margin-left: $base-spacing-unit;
  }

  svg {
    vertical-align: middle;
    display: inline-block;

    & + a,
    & + span {
      display: inline-block;
      margin-left: $base-spacing-unit;
    }
  }
}

// [END: Button placeholders]
// **
// **

// [START: Button mixins]
@mixin btn-shadow($color) {
  box-shadow: 0 1px 1.5px rgba(0, 0, 0, 0.16), 0 1px 1px $color;
}

@mixin btn-shadow-active($color) {
  box-shadow: 0 0 1px rgba(0, 0, 0, 0.16), 0 0 0.5px $color;
}

@mixin btn-color(
  $color,
  $color-shadow: adjust_hue(darken($color, 3%), 5%),
  $text-color: $white
) {
  background: $color;
  color: $text-color;
  border: $base-border-width solid darken($color-shadow, 6%);
  text-shadow: 0 -1px 0 $color;
  font-family: $base-font-family;

  svg {
    fill: $pure-white;
  }

  &:hover:not([disabled="disabled"]) {
    background: lighten($color, 3%);
  }

  &:active:not([disabled="disabled"]) {
    background: lighten($color, 5%);
  }

  &[disabled="disabled"] {
    background: $mono-light;
    color: $mono;
    cursor: default;
    text-shadow: none;
    opacity: 0.6;
    box-shadow: none !important;
    //transform: translate3d(0, 0, 0);
  }
}

@mixin btn-outlined-color($color, $color-shadow: $color) {
  border: $base-border-width solid $mono-lighter;
  color: $color;
  font-family: $base-font-family;
  opacity: 1 !important;

  svg {
    fill: $color;
  }

  &:hover:not([disabled="disabled"]):not(.#{$ns}btn--active):not(:active) {
    svg {
      fill: $color;
    }

    border: $base-border-width solid darken($color-shadow, 6%);
    color: $color;
    background: $color-shadow;
  }

  &:active:not([disabled="disabled"]),
  &.#{$ns}btn--active {
    svg {
      fill: $color;
    }

    border-color: transparent;
    background: darken($color-shadow, 1%);
  }

  &[disabled="disabled"] {
    color: $mono-light !important;
    border-color: $mono-lighter;
    cursor: default;
    opacity: 0.6;

    svg {
      fill: $mono-lighter !important;
    }
  }

  transition: all 0.15s ease-in-out;
}

@mixin btn-naked-color(
  $color,
  $color-shadow: adjust_hue(darken($color, 5%), 8%),
  $background-color: rgba(0, 0, 0, 0)
) {
  color: $color;
  background: $background-color;

  svg {
    fill: $color;
  }

  &:hover:not([disabled="disabled"]):not(.#{$ns}btn--active):not(:active) {
    color: $color-shadow;
    // background: rgba(0, 0, 0, 0.50) !important;

    svg {
      fill: $color-shadow;
    }
  }

  &:active:not([disabled="disabled"]),
  &.#{$ns}btn--active {
    color: $color-shadow;

    svg {
      fill: $color-shadow;
    }
  }
}

// [END: Button mixins]

// [START: Default]
.#{$ns}btn-primary {
  @extend %btn;
  @include btn-color($brand-primary, $brand-primary-shadow);
}

.#{$ns}btn-accent {
  @extend %btn;
  @include btn-color($brand-accent, $brand-accent);
}

.#{$ns}btn-success {
  @extend %btn;
  @include btn-color($brand-success, $brand-success-shadow);
}

.#{$ns}btn-warning {
  @extend %btn;
  @include btn-color($brand-warning, $brand-warning-shadow);
}

.#{$ns}btn-danger {
  @extend %btn;
  @include btn-color($brand-danger, $brand-danger-shadow);
}

.#{$ns}btn-mono {
  @extend %btn;
  @include btn-color($mono-lightest, darken($mono-lightest, 2%), $mono-dark);
}

.#{$ns}btn-white {
  @extend %btn;
  @include btn-color($white, $white, $mono);
}

.#{$ns}btn-white--primary {
  @extend %btn;
  @include btn-color($white, $white, $brand-primary);
}

.#{$ns}btn-white--accent {
  @extend %btn;
  @include btn-color($white, $white, $brand-accent);
}

.#{$ns}btn-pure {
  @extend %btn;
  @include btn-color($pure-white, $pure-white, $mono-dark);
}

// [START: Outlined]
$btn-outlined-namespace: "o";

.#{$ns}btn-#{$btn-outlined-namespace}-primary {
  @extend %btn-outlined;
  @include btn-outlined-color($brand-primary, $brand-primary-shadow);
}

.#{$ns}btn-#{$btn-outlined-namespace}-accent {
  @extend %btn-outlined;
  @include btn-outlined-color($brand-accent, $brand-accent-shadow);
}

.#{$ns}btn-#{$btn-outlined-namespace}-success {
  @extend %btn-outlined;
  @include btn-outlined-color($brand-success, $brand-success-shadow);
}

.#{$ns}btn-#{$btn-outlined-namespace}-warning {
  @extend %btn-outlined;
  @include btn-outlined-color($brand-warning, $brand-warning-shadow);
}

.#{$ns}btn-#{$btn-outlined-namespace}-danger {
  @extend %btn-outlined;
  @include btn-outlined-color($brand-danger, $brand-danger-shadow);
}

.#{$ns}btn-#{$btn-outlined-namespace}-mono {
  @extend %btn-outlined;
  @include btn-outlined-color($mono-dark, $white);
}

.#{$ns}btn-#{$btn-outlined-namespace}-mono-light {
  @extend %btn-outlined;
  @include btn-outlined-color($mono-lighter, $white);
}

.#{$ns}btn-#{$btn-outlined-namespace}-white {
  @extend %btn-outlined;
  @include btn-outlined-color($white, $brand-primary);
}

// [END]

// [START: Naked]
$btn-naked-namespace: "n";

.#{$ns}btn-#{$btn-naked-namespace}-primary {
  @extend %btn-naked;
  @include btn-naked-color($brand-primary, $brand-primary-shadow);
}

.#{$ns}btn-#{$btn-naked-namespace}-accent {
  @extend %btn-naked;
  @include btn-naked-color($brand-accent, $brand-accent-shadow);
}

.#{$ns}btn-#{$btn-naked-namespace}-success {
  @extend %btn-naked;
  @include btn-naked-color($brand-success, $brand-success-shadow);
}

.#{$ns}btn-#{$btn-naked-namespace}-warning {
  @extend %btn-naked;
  @include btn-naked-color($brand-warning, $brand-warning-shadow);
}

.#{$ns}btn-#{$btn-naked-namespace}-danger {
  @extend %btn-naked;
  @include btn-naked-color($brand-danger);
}

.#{$ns}btn-#{$btn-naked-namespace}-mono {
  @extend %btn-naked;
  @include btn-naked-color($mono-light, $mono);
}

.#{$ns}btn-#{$btn-naked-namespace}-mono-dark {
  @extend %btn-naked;
  @include btn-naked-color($mono, $mono-dark);
}

.#{$ns}btn-#{$btn-naked-namespace}-inverse {
  @extend %btn-naked;
  @include btn-naked-color($white, $mono-lighter, $mono-darker);
}

.#{$ns}btn-#{$btn-naked-namespace}-white {
  @extend %btn-naked;
  @include btn-naked-color($white);
}

// [END]

// [START: Modifiers]
.#{$ns}btn--circle {
  border-radius: 50%;
  padding: 0 !important;
}

.#{$ns}btn--square {
  padding: 0 !important;
}

.#{$ns}btn--dashed {
  border-style: dashed !important;
}

.#{$ns}btn--sharp {
  border-radius: 0;
}

.#{$ns}btn--pill {
  border-radius: 500px !important;
}

.#{$ns}btn--nowrap {
  white-space: nowrap;
}

.#{$ns}btn--xs {
  @extend %h6;
  padding: 0 $pad-x-xxs;
  min-height: $dimensions-xs;
  font-size: $xx-small;
  border-radius: $base-border-radius;

  &.#{$ns}btn--circle,
  &.#{$ns}btn--square {
    width: $dimensions-xs;
    height: $dimensions-xs;
  }
}

.#{$ns}btn--sm {
  @extend %h5;
  padding: 0 $pad-x-sm;
  min-height: $dimensions-xs;
  font-size: $x-small;
  border-radius: $base-border-radius;

  &.#{$ns}btn--circle,
  &.#{$ns}btn--square {
    width: $dimensions-sm;
    height: $dimensions-sm;
  }
}

.#{$ns}btn--md {
  @extend %h5;
  padding: 0 $pad-x-md;
  min-height: $dimensions-xs;
  font-size: $small;
  border-radius: $base-border-radius;

  &.#{$ns}btn--circle,
  &.#{$ns}btn--square {
    width: $dimensions-md;
    height: $dimensions-md;
  }
}

.#{$ns}btn--lg {
  @extend %h4;
  padding: $pad-y-xs $pad-x-lg;
  min-height: $dimensions-lg;
  font-size: $large;
  border-radius: $base-border-radius;

  &.#{$ns}btn--circle,
  &.#{$ns}btn--square {
    width: $dimensions-lg;
    height: $dimensions-lg;
  }
}

.#{$ns}btn--block,
%btn--block {
  width: 100%;
  display: block;
}

.#{$ns}btn-group {
  position: relative;
  display: inline-block;
  vertical-align: middle;

  & > [class*="#{$ns}btn-"] {
    display: inline-block;
    border-radius: 0;

    & + [class*="#{$ns}btn-"] {
      margin-left: -4px;
      border-left: none;
    }
  }
}

.#{$ns}btn-group--rounded {
  & > [class*="#{$ns}btn-"] {
    &:first-of-type {
      border-top-left-radius: $base-border-radius;
      border-bottom-left-radius: $base-border-radius;
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    &:last-of-type {
      border-top-right-radius: $base-border-radius;
      border-bottom-right-radius: $base-border-radius;
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }
  }
}

.#{$ns}btn-icon-container {
  line-height: $base-spacing-unit * 4 !important;
}

// [END]
